{"version":3,"sources":["components/Form/form.component.jsx","components/Item/Item.component.jsx","components/ToDoList/toDoList.component.jsx","App.js","index.js"],"names":["Form","setInputText","setTodos","todos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Date","now","name","Item","todo","map","item","filter","el","ToDoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalsToDo","filterHandler","saveToLocalStorage","localStorage","setItem","JSON","stringify","getItem","todoFromLocal","parse","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3cd2a900.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = ({ setInputText, setTodos, todos, inputText, setStatus }) => {\r\n  // JS function\r\n  const inputTextHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n  const submitTodoHandler = (e) => {\r\n    e.preventDefault();\r\n    setTodos([...todos, { text: inputText, completed: false, id: Date.now() }]);\r\n    setInputText(\"\");\r\n  };\r\n  const statusHandler = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n  return (\r\n    <form>\r\n      <input\r\n        value={inputText}\r\n        onChange={inputTextHandler}\r\n        type=\"text\"\r\n        className=\"todo-input\"\r\n      />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Item = ({ todo, setTodos, todos }) => {\r\n  const deleteHandler = () => {\r\n    setTodos(todos.filter((el) => el.id !== todo.id));\r\n  };\r\n  const completeHandler = () => {\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === todo.id) {\r\n          return {\r\n            ...item,\r\n            completed: !item.completed,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"todo\">\r\n      <li className={`todo-item ${todo.completed && \"completed\"}`}>\r\n        {todo.text}\r\n      </li>\r\n      <button onClick={completeHandler} className=\"complete-btn\">\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n      <button onClick={deleteHandler} className=\"trash-btn\">\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\n\r\n// Imported components\r\nimport Item from \"../Item/Item.component\";\r\n\r\nconst ToDoList = ({ todos, setTodos, filteredTodos }) => {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {filteredTodos.map((todo) => (\r\n          <Item todos={todos} setTodos={setTodos} todo={todo} key={todo.id} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.style.css\";\n\n// importing Component\nimport Form from \"./components/Form/form.component\";\nimport ToDoList from \"./components/ToDoList/toDoList.component\";\n\nfunction App() {\n  // states\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  useEffect(() => {\n    getLocalsToDo();\n  }, []);\n  // function\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n  // use Effect\n  useEffect(() => {\n    filterHandler();\n    saveToLocalStorage();\n  }, [todos, status]);\n\n  // save to local Storage\n  const saveToLocalStorage = () =>\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n\n  const getLocalsToDo = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoFromLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoFromLocal);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Nitin To Do List</h1>\n      </header>\n      <Form\n        inputText={inputText}\n        todos={todos}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n      <ToDoList\n        filteredTodos={filteredTodos}\n        setTodos={setTodos}\n        todos={todos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}